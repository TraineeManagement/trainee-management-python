# Generated by Django 4.2.2 on 2023-07-14 07:05

import datetime
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('door_no', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('pincode', models.IntegerField()),
                ('state', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=100)),
                ('image', models.ImageField(default='', upload_to='images/')),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'batch',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('subject_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_name', models.CharField(max_length=100)),
                ('created_by', models.CharField(default='siva', max_length=100)),
                ('created_on', models.DateField(default=datetime.date.today)),
                ('updated_by', models.CharField(default='siva', max_length=100)),
                ('updated_on', models.DateField(default=datetime.date.today)),
            ],
            options={
                'db_table': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('trainer_id', models.AutoField(primary_key=True, serialize=False)),
                ('trainer_name', models.CharField(max_length=100)),
                ('trainer_phonenumber', models.CharField(max_length=10)),
                ('triner_email', models.EmailField(max_length=254)),
                ('trainer_age', models.IntegerField()),
                ('trainer_gender', models.CharField(max_length=10)),
                ('created_by', models.CharField(default='siva', max_length=100)),
                ('created_on', models.DateField(default=datetime.date.today)),
                ('updated_by', models.CharField(default='siva', max_length=100)),
                ('updated_on', models.DateField(default=datetime.date.today)),
                ('address_id', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.address')),
            ],
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('trainee_id', models.AutoField(primary_key=True, serialize=False)),
                ('trainee_name', models.CharField(max_length=100)),
                ('trainee_age', models.IntegerField()),
                ('trainee_gender', models.CharField(max_length=20)),
                ('trainee_phonenumber', models.CharField(max_length=10)),
                ('trainee_email', models.EmailField(max_length=254)),
                ('address_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.address')),
                ('batch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.batch')),
            ],
            options={
                'db_table': 'trainee',
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('topic_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic_name', models.CharField(max_length=100)),
                ('subject_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.subjects')),
            ],
            options={
                'db_table': 'topics',
            },
        ),
        migrations.AddField(
            model_name='subjects',
            name='trainer',
            field=models.ManyToManyField(related_name='subjects', to='account.trainer'),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=100)),
                ('course_duration', models.CharField(max_length=100)),
                ('course_fee', models.IntegerField(default=35000)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('subjects', models.ManyToManyField(related_name='courses', to='account.subjects')),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('branch_id', models.AutoField(primary_key=True, serialize=False)),
                ('branch_name', models.CharField(max_length=45)),
                ('status', models.CharField(default='Active', max_length=45)),
                ('created_by', models.CharField(default='sharath', max_length=45)),
                ('created_on', models.DateField(default=datetime.date.today)),
                ('updated_by', models.CharField(default='sharath', max_length=45)),
                ('updated_on', models.DateField(default=datetime.date.today)),
                ('location_id', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='account.location')),
            ],
            options={
                'db_table': 'branch',
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='account.branch'),
        ),
        migrations.AddField(
            model_name='batch',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.course'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('phone_number', models.BigIntegerField()),
                ('role', models.CharField(default='admin', max_length=45)),
                ('status', models.CharField(max_length=45)),
                ('branch_id', models.ForeignKey(db_column='branch_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branch', to='account.branch')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
